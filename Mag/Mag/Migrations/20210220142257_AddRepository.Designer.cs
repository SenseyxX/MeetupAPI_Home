// <auto-generated />
using System;
using Mag.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mag.Migrations
{
    [DbContext(typeof(MagContext))]
    [Migration("20210220142257_AddRepository")]
    partial class AddRepository
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mag.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Mag.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ItemPhoto")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("LoansHistoriesId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("QrCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualityId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryForeignKey")
                        .IsUnique()
                        .HasFilter("[CategoryForeignKey] IS NOT NULL");

                    b.HasIndex("LoansHistoriesId");

                    b.HasIndex("QualityId")
                        .IsUnique();

                    b.ToTable("items");
                });

            modelBuilder.Entity("Mag.Entities.LoanHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LastOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("loanHistories");
                });

            modelBuilder.Entity("Mag.Entities.Quality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualityNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("qualities");
                });

            modelBuilder.Entity("Mag.Entities.Squad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SquadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SquadOwner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("squads");
                });

            modelBuilder.Entity("Mag.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoansHistoriesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SquadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("LoansHistoriesId");

                    b.HasIndex("SquadId")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("Mag.Entities.Item", b =>
                {
                    b.HasOne("Mag.Entities.Category", "Category")
                        .WithOne("Item")
                        .HasForeignKey("Mag.Entities.Item", "CategoryForeignKey");

                    b.HasOne("Mag.Entities.LoanHistory", "LoansHistories")
                        .WithMany("items")
                        .HasForeignKey("LoansHistoriesId");

                    b.HasOne("Mag.Entities.Quality", "Quality")
                        .WithOne("Item")
                        .HasForeignKey("Mag.Entities.Item", "QualityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("LoansHistories");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("Mag.Entities.User", b =>
                {
                    b.HasOne("Mag.Entities.Item", "Item")
                        .WithMany("Users")
                        .HasForeignKey("ItemId");

                    b.HasOne("Mag.Entities.LoanHistory", "LoansHistories")
                        .WithMany("users")
                        .HasForeignKey("LoansHistoriesId");

                    b.HasOne("Mag.Entities.Squad", "Squad")
                        .WithOne("User")
                        .HasForeignKey("Mag.Entities.User", "SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("LoansHistories");

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Mag.Entities.Category", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("Mag.Entities.Item", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Mag.Entities.LoanHistory", b =>
                {
                    b.Navigation("items");

                    b.Navigation("users");
                });

            modelBuilder.Entity("Mag.Entities.Quality", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("Mag.Entities.Squad", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
